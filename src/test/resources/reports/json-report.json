[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:17.625Z",
        "line": 19,
        "name": "As a User I should be able to add Moon (Positive Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(positive-scenario);;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 440679900,
              "status": "passed"
            },
            "line": 6,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24891400,
              "status": "passed"
            },
            "line": 7,
            "name": "No Planet or Moon with name \"MoonsAreThirtyCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8301300,
              "status": "passed"
            },
            "line": 8,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109658000,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 279753700,
              "status": "passed"
            },
            "line": 10,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 187840200,
              "status": "passed"
            },
            "line": 11,
            "name": "The User enters \"MoonsAreThirtyCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64253300,
              "status": "passed"
            },
            "line": 12,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 28231000,
              "status": "passed"
            },
            "line": 13,
            "name": "\"moon-1.jpg\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"moon-1.jpg\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33145000,
              "status": "passed"
            },
            "line": 14,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1033571100,
              "status": "passed"
            },
            "line": 15,
            "name": "The Moon \"MoonsAreThirtyCharactersLong!!\" should be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-22"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:19.905Z",
        "line": 20,
        "name": "As a User I should be able to add Moon (Positive Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(positive-scenario);;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 202205200,
              "status": "passed"
            },
            "line": 6,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45010600,
              "status": "passed"
            },
            "line": 7,
            "name": "No Planet or Moon with name \"MoonsAreThirtyCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4211000,
              "status": "passed"
            },
            "line": 8,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72169200,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70656300,
              "status": "passed"
            },
            "line": 10,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 349999900,
              "status": "passed"
            },
            "line": 11,
            "name": "The User enters \"MoonsAreThirtyCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53511500,
              "status": "passed"
            },
            "line": 12,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "\"\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 32721300,
              "status": "passed"
            },
            "line": 14,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.AddMoonSteps.the_moon_should_be_added_to_the_planetarium(AddMoonSteps.java:106)\r\n\tat ✽.The Moon \"MoonsAreThirtyCharactersLong!!\" should be added to planetarium(classpath:features/AddMoons.feature:15)\r\n",
              "duration": 1027669100,
              "status": "failed"
            },
            "line": 15,
            "name": "The Moon \"MoonsAreThirtyCharactersLong!!\" should be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-22"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:21.782Z",
        "line": 40,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 229620400,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5147200,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20008200,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30636800,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"AlreadyAddedMoonInTheDatabase!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21999300,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63053900,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62660300,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 335428800,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"AlreadyAddedMoonInTheDatabase!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39791700,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19349400,
              "status": "passed"
            },
            "line": 34,
            "name": "\"moon-1.jpg\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"moon-1.jpg\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27473200,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 524452600,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"AlreadyAddedMoonInTheDatabase!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:23.170Z",
        "line": 41,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 305472200,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4981000,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23239400,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50302100,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"AlreadyAddedMoonInTheDatabase!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23097700,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79242200,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 303472300,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 165972500,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"AlreadyAddedMoonInTheDatabase!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48334800,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "\"\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35468400,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1040021400,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"AlreadyAddedMoonInTheDatabase!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:25.256Z",
        "line": 42,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232479400,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3996300,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34007900,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29069900,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"MoonIsThirtyOneCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28581600,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71374000,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 221828200,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 200635600,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"MoonIsThirtyOneCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 65106500,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 28715500,
              "status": "passed"
            },
            "line": 34,
            "name": "\"moon-1.jpg\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"moon-1.jpg\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 30185500,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 523345300,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"MoonIsThirtyOneCharactersLong!!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:26.733Z",
        "line": 43,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 229481200,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000100,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28306300,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40723100,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"MoonIsThirtyOneCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36569700,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74513900,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 275780000,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 176387000,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"MoonIsThirtyOneCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67687800,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"3\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "\"\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35550500,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1038310400,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"MoonIsThirtyOneCharactersLong!!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:28.753Z",
        "line": 44,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 247612600,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000800,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23999500,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40584300,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"MoonsAreThirtyCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14000800,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67635500,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64336600,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 295638700,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"MoonsAreThirtyCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89430000,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"10\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22427200,
              "status": "passed"
            },
            "line": 34,
            "name": "\"moon-1.jpg\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"moon-1.jpg\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 28835700,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 513477400,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"MoonsAreThirtyCharactersLong!!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:30.173Z",
        "line": 45,
        "name": "As a User I should be able to add Moon (Negative Scenario)",
        "description": "",
        "id": "addmoons;as-a-user-i-should-be-able-to-add-moon-(negative-scenario);;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 236443400,
              "status": "passed"
            },
            "line": 25,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5165700,
              "status": "passed"
            },
            "line": 26,
            "name": "Planet with ID \"3\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26198900,
              "status": "passed"
            },
            "line": 27,
            "name": "The ID of the Planet \"10\" does not exist in the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 21
                }
              ],
              "location": "com.revature.step.AddMoonSteps.id_of_orbited_planet_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32488700,
              "status": "passed"
            },
            "line": 28,
            "name": "No Planet or Moon with name \"MoonsAreThirtyCharactersLong!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.AddMoonSteps.no_planet_or_moon_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000900,
              "status": "passed"
            },
            "line": 29,
            "name": "Moon name \"AlreadyAddedMoonInTheDatabase!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedMoonInTheDatabase!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77003800,
              "status": "passed"
            },
            "line": 30,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 179100500,
              "status": "passed"
            },
            "line": 31,
            "name": "The User selects moon from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddMoonSteps.the_User_selects_moon_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 236049700,
              "status": "passed"
            },
            "line": 32,
            "name": "The User enters \"MoonsAreThirtyCharactersLong!!\" for moon name",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_for_moon_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 71725400,
              "status": "passed"
            },
            "line": 33,
            "name": "The User enters \"10\" for the planet that the moon is orbiting",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_enters_orbited_planet_id(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "\"\" The User selects an image from file explorer for moon image",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_User_selects_an_image_from_filesystem_for_moon_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39633800,
              "status": "passed"
            },
            "line": 35,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1028918900,
              "status": "passed"
            },
            "line": 36,
            "name": "The Moon \"MoonsAreThirtyCharactersLong!!\" should not be added to planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonsAreThirtyCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.AddMoonSteps.the_moon_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddMoons"
          },
          {
            "name": "@SCRUM-TC-23"
          }
        ]
      }
    ],
    "name": "AddMoons",
    "description": "",
    "id": "addmoons",
    "keyword": "Feature",
    "uri": "classpath:features/AddMoons.feature",
    "tags": [
      {
        "name": "@AddMoons",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:32.142Z",
        "line": 18,
        "name": "As a User I want to add new planets to the Planetarium, so I can track the planet in the night sky",
        "description": "Add Planets Test Positive Scenario",
        "id": "addplanets;as-a-user-i-want-to-add-new-planets-to-the-planetarium--so-i-can-track-the-planet-in-the-night-sky;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 296978900,
              "status": "passed"
            },
            "line": 8,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43722300,
              "status": "passed"
            },
            "line": 9,
            "name": "No planet with name \"this planet name is 30 chars!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.no_planet_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120888000,
              "status": "passed"
            },
            "line": 10,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 303567100,
              "status": "passed"
            },
            "line": 11,
            "name": "The User enters \"this planet name is 30 chars!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 72722800,
              "status": "passed"
            },
            "line": 12,
            "name": "\"true\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46022600,
              "status": "passed"
            },
            "line": 13,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1038719600,
              "status": "passed"
            },
            "line": 14,
            "name": "The planet \"this planet name is 30 chars!!\" should be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-24"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:34.072Z",
        "line": 19,
        "name": "As a User I want to add new planets to the Planetarium, so I can track the planet in the night sky",
        "description": "Add Planets Test Positive Scenario",
        "id": "addplanets;as-a-user-i-want-to-add-new-planets-to-the-planetarium--so-i-can-track-the-planet-in-the-night-sky;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 230327600,
              "status": "passed"
            },
            "line": 8,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29115900,
              "status": "passed"
            },
            "line": 9,
            "name": "No planet with name \"this planet name is 30 chars!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.no_planet_with_name_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78750800,
              "status": "passed"
            },
            "line": 10,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 248255900,
              "status": "passed"
            },
            "line": 11,
            "name": "The User enters \"this planet name is 30 chars!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "\"false\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"false\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93388100,
              "status": "passed"
            },
            "line": 13,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.AddPlanetsSteps.the_planet_should_be_added_to_the_planetarium(AddPlanetsSteps.java:101)\r\n\tat ✽.The planet \"this planet name is 30 chars!!\" should be added to the planetarium(classpath:features/AddPlanets.feature:14)\r\n",
              "duration": 1030508600,
              "status": "failed"
            },
            "line": 14,
            "name": "The planet \"this planet name is 30 chars!!\" should be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 30 chars!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-24"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:35.786Z",
        "line": 34,
        "name": "As a User I should not be able to add new planets to the Planetarium with incorrect credentials",
        "description": "\tAdd Planets Test Negative Scenario",
        "id": "addplanets;as-a-user-i-should-not-be-able-to-add-new-planets-to-the-planetarium-with-incorrect-credentials;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 218760300,
              "status": "passed"
            },
            "line": 24,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30382600,
              "status": "passed"
            },
            "line": 25,
            "name": "Planet with name \"AlreadyAddedPlanetInDatabase!!\" already exists",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 17
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.planetWithNameAlreadyExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69896100,
              "status": "passed"
            },
            "line": 26,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 231627700,
              "status": "passed"
            },
            "line": 27,
            "name": "The User enters \"this planet name is 31 chars!!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 31 chars!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59893700,
              "status": "passed"
            },
            "line": 28,
            "name": "\"true\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39563400,
              "status": "passed"
            },
            "line": 29,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 524786200,
              "status": "passed"
            },
            "line": 30,
            "name": "The planet \"this planet name is 31 chars!!!\" should not be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 31 chars!!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-25"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:36.967Z",
        "line": 35,
        "name": "As a User I should not be able to add new planets to the Planetarium with incorrect credentials",
        "description": "\tAdd Planets Test Negative Scenario",
        "id": "addplanets;as-a-user-i-should-not-be-able-to-add-new-planets-to-the-planetarium-with-incorrect-credentials;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 243073900,
              "status": "passed"
            },
            "line": 24,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000200,
              "status": "passed"
            },
            "line": 25,
            "name": "Planet with name \"AlreadyAddedPlanetInDatabase!!\" already exists",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 17
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.planetWithNameAlreadyExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70255500,
              "status": "passed"
            },
            "line": 26,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 219357700,
              "status": "passed"
            },
            "line": 27,
            "name": "The User enters \"AlreadyAddedPlanetInDatabase!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67785600,
              "status": "passed"
            },
            "line": 28,
            "name": "\"true\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45643000,
              "status": "passed"
            },
            "line": 29,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 526804900,
              "status": "passed"
            },
            "line": 30,
            "name": "The planet \"AlreadyAddedPlanetInDatabase!!\" should not be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-25"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:38.160Z",
        "line": 36,
        "name": "As a User I should not be able to add new planets to the Planetarium with incorrect credentials",
        "description": "\tAdd Planets Test Negative Scenario",
        "id": "addplanets;as-a-user-i-should-not-be-able-to-add-new-planets-to-the-planetarium-with-incorrect-credentials;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 223680000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 25,
            "name": "Planet with name \"AlreadyAddedPlanetInDatabase!!\" already exists",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 17
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.planetWithNameAlreadyExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76671200,
              "status": "passed"
            },
            "line": 26,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 235056300,
              "status": "passed"
            },
            "line": 27,
            "name": "The User enters \"this planet name is 31 chars!!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 31 chars!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 999500,
              "status": "passed"
            },
            "line": 28,
            "name": "\"false\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"false\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67190600,
              "status": "passed"
            },
            "line": 29,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1030161300,
              "status": "passed"
            },
            "line": 30,
            "name": "The planet \"this planet name is 31 chars!!!\" should not be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"this planet name is 31 chars!!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-25"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:39.811Z",
        "line": 37,
        "name": "As a User I should not be able to add new planets to the Planetarium with incorrect credentials",
        "description": "\tAdd Planets Test Negative Scenario",
        "id": "addplanets;as-a-user-i-should-not-be-able-to-add-new-planets-to-the-planetarium-with-incorrect-credentials;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 240503900,
              "status": "passed"
            },
            "line": 24,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12019900,
              "status": "passed"
            },
            "line": 25,
            "name": "Planet with name \"AlreadyAddedPlanetInDatabase!!\" already exists",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 17
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.planetWithNameAlreadyExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62552400,
              "status": "passed"
            },
            "line": 26,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 228507400,
              "status": "passed"
            },
            "line": 27,
            "name": "The User enters \"AlreadyAddedPlanetInDatabase!!\" for planet name",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_enters_for_planet_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "\"false\" The User selects an image from filesystem for planet image",
            "match": {
              "arguments": [
                {
                  "val": "\"false\"",
                  "offset": 0
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_an_image_from_filesystem_for_planet_image(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92376600,
              "status": "passed"
            },
            "line": 29,
            "name": "The User clicks on the submit button",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_clicks_on_the_submit_button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1069432500,
              "status": "passed"
            },
            "line": 30,
            "name": "The planet \"AlreadyAddedPlanetInDatabase!!\" should not be added to the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyAddedPlanetInDatabase!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.AddPlanetsSteps.the_planet_should_not_be_added_to_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@AddPlanets"
          },
          {
            "name": "@SCRUM-TC-25"
          }
        ]
      }
    ],
    "name": "AddPlanets",
    "description": "",
    "id": "addplanets",
    "keyword": "Feature",
    "uri": "classpath:features/AddPlanets.feature",
    "tags": [
      {
        "name": "@AddPlanets",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:41.519Z",
        "line": 16,
        "name": "As a user I want to be able to remove Moons from the Planetarium",
        "description": "\tDelete Moon Positive Scenario",
        "id": "deletemoons;as-a-user-i-want-to-be-able-to-remove-moons-from-the-planetarium;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2001100,
              "status": "passed"
            },
            "line": 7,
            "name": "Moon name \"MoonIsThirtyOneCharactersLong!!\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 259248600,
              "status": "passed"
            },
            "line": 8,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58720500,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects moon from drop-down menu",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_User_selects_moon_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 272862900,
              "status": "passed"
            },
            "line": 10,
            "name": "User enters valid moon name \"MoonIsThirtyOneCharactersLong!!\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.user_enters_valid_moon_name_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 97199300,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3142800,
              "status": "passed"
            },
            "line": 12,
            "name": "The moon \"MoonIsThirtyOneCharactersLong!!\" should be deleted from the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"MoonIsThirtyOneCharactersLong!!\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.the_moon_should_be_deleted_from_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeleteMoons"
          },
          {
            "name": "@SCRUM-TC-31"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:42.219Z",
        "line": 17,
        "name": "As a user I want to be able to remove Moons from the Planetarium",
        "description": "\tDelete Moon Positive Scenario",
        "id": "deletemoons;as-a-user-i-want-to-be-able-to-remove-moons-from-the-planetarium;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10208700,
              "status": "passed"
            },
            "line": 7,
            "name": "Moon name \"303030303030303030303030303030\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 10
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 309358800,
              "status": "passed"
            },
            "line": 8,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66373900,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects moon from drop-down menu",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_User_selects_moon_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 265891400,
              "status": "passed"
            },
            "line": 10,
            "name": "User enters valid moon name \"303030303030303030303030303030\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 28
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.user_enters_valid_moon_name_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138004200,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.DeleteMoonSteps.the_moon_should_be_deleted_from_the_planetarium(DeleteMoonSteps.java:80)\r\n\tat ✽.The moon \"303030303030303030303030303030\" should be deleted from the planetarium(classpath:features/DeleteMoons.feature:12)\r\n",
              "duration": 5157800,
              "status": "failed"
            },
            "line": 12,
            "name": "The moon \"303030303030303030303030303030\" should be deleted from the planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 9
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.the_moon_should_be_deleted_from_the_planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeleteMoons"
          },
          {
            "name": "@SCRUM-TC-31"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:43.022Z",
        "line": 31,
        "name": "As a user I should not be able to remove Moon from the Planetarium when given invalid names",
        "description": "\tDelete Moon Negative Scenario",
        "id": "deletemoons;as-a-user-i-should-not-be-able-to-remove-moon-from-the-planetarium-when-given-invalid-names;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 303177700,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16978600,
              "status": "passed"
            },
            "line": 23,
            "name": "There is no Moon named \"NoMoonInDatabaseToDeleteHere!!\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"NoMoonInDatabaseToDeleteHere!!\"",
                  "offset": 23
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.there_is_no_Moon_named_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70219200,
              "status": "passed"
            },
            "line": 24,
            "name": "The User selects moon from drop-down menu",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_User_selects_moon_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 275138200,
              "status": "passed"
            },
            "line": 25,
            "name": "User enters invalid \"NoMoonInDatabaseToDeleteHere!!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"NoMoonInDatabaseToDeleteHere!!\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.user_enters_invalid(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 97196300,
              "status": "passed"
            },
            "line": 26,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The user should see error message pop-up",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_user_should_see_error_message_pop_up()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeleteMoons"
          },
          {
            "name": "@SCRUM-TC-32"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:43.790Z",
        "line": 32,
        "name": "As a user I should not be able to remove Moon from the Planetarium when given invalid names",
        "description": "\tDelete Moon Negative Scenario",
        "id": "deletemoons;as-a-user-i-should-not-be-able-to-remove-moon-from-the-planetarium-when-given-invalid-names;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 281660600,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1999400,
              "status": "passed"
            },
            "line": 23,
            "name": "There is no Moon named \"3131313131313131313131313131311\" in planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"3131313131313131313131313131311\"",
                  "offset": 23
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.there_is_no_Moon_named_in_planetarium(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71186800,
              "status": "passed"
            },
            "line": 24,
            "name": "The User selects moon from drop-down menu",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_User_selects_moon_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 273898500,
              "status": "passed"
            },
            "line": 25,
            "name": "User enters invalid \"3131313131313131313131313131311\"",
            "match": {
              "arguments": [
                {
                  "val": "\"3131313131313131313131313131311\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.user_enters_invalid(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 628873100,
              "status": "passed"
            },
            "line": 26,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The user should see error message pop-up",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_user_should_see_error_message_pop_up()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeleteMoons"
          },
          {
            "name": "@SCRUM-TC-32"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:45.053Z",
        "line": 46,
        "name": "User should not be able to delete a moon by  its ID",
        "description": "",
        "id": "deletemoons;user-should-not-be-able-to-delete-a-moon-by--its-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 307236500,
              "status": "passed"
            },
            "line": 36,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 677536800,
              "status": "passed"
            },
            "line": 37,
            "name": "Moon with ID \"1\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 13
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.moon_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72195700,
              "status": "passed"
            },
            "line": 38,
            "name": "The User selects moon from drop-down menu",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_User_selects_moon_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125189600,
              "status": "passed"
            },
            "line": 39,
            "name": "User enters moon id \"1\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.user_enters_moon_id_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 551247300,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1004000,
              "status": "passed"
            },
            "line": 41,
            "name": "The user should see error",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_user_should_see_error_and_the_moon_with_ID_should_not_be_deleted()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.DeleteMoonSteps.theMoonWithIDShouldNotBeDeleted(DeleteMoonSteps.java:97)\r\n\tat ✽.The moon with ID \"1\" should not be deleted(classpath:features/DeleteMoons.feature:42)\r\n",
              "duration": 2998000,
              "status": "failed"
            },
            "line": 42,
            "name": "The moon with ID \"1\" should not be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 17
                }
              ],
              "location": "com.revature.step.DeleteMoonSteps.theMoonWithIDShouldNotBeDeleted(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteMoons"
          },
          {
            "name": "@SCRUM-TC-34"
          }
        ]
      }
    ],
    "name": "DeleteMoons",
    "description": "",
    "id": "deletemoons",
    "keyword": "Feature",
    "uri": "classpath:features/DeleteMoons.feature",
    "tags": [
      {
        "name": "@DeleteMoons",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:46.795Z",
        "line": 16,
        "name": "As a user I want to be able to remove Planets from the Planetarium",
        "description": "\tDelete Planet Positive Scenario",
        "id": "deleteplanets;as-a-user-i-want-to-be-able-to-remove-planets-from-the-planetarium;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 251471100,
              "status": "passed"
            },
            "line": 7,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 758030700,
              "status": "passed"
            },
            "line": 8,
            "name": "Given Planet names \"PlanetIsThirtyCharactersLong!!\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"PlanetIsThirtyCharactersLong!!\"",
                  "offset": 19
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.given_Planet_names_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 124691500,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects planets from drop-down menu",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_User_selects_planets_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 222272500,
              "status": "passed"
            },
            "line": 10,
            "name": "User enters valid \"PlanetIsThirtyCharactersLong!!\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"PlanetIsThirtyCharactersLong!!\"",
                  "offset": 18
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.user_enters_valid_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1071982400,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3092000,
              "status": "passed"
            },
            "line": 12,
            "name": "The planet \"PlanetIsThirtyCharactersLong!!\" should be deleted from the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"PlanetIsThirtyCharactersLong!!\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.the_planet_should_be_deleted_from_the_Planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlanets"
          },
          {
            "name": "@SCRUM-TC-21"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:49.231Z",
        "line": 17,
        "name": "As a user I want to be able to remove Planets from the Planetarium",
        "description": "\tDelete Planet Positive Scenario",
        "id": "deleteplanets;as-a-user-i-want-to-be-able-to-remove-planets-from-the-planetarium;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 368055800,
              "status": "passed"
            },
            "line": 7,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 677903600,
              "status": "passed"
            },
            "line": 8,
            "name": "Given Planet names \"303030303030303030303030303030\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 19
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.given_Planet_names_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83999900,
              "status": "passed"
            },
            "line": 9,
            "name": "The User selects planets from drop-down menu",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_User_selects_planets_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 205997200,
              "status": "passed"
            },
            "line": 10,
            "name": "User enters valid \"303030303030303030303030303030\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 18
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.user_enters_valid_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 544299200,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.DeletePlanetSteps.the_planet_should_be_deleted_from_the_Planetarium(DeletePlanetSteps.java:71)\r\n\tat ✽.The planet \"303030303030303030303030303030\" should be deleted from the Planetarium(classpath:features/DeletePlanets.feature:12)\r\n",
              "duration": 3187200,
              "status": "failed"
            },
            "line": 12,
            "name": "The planet \"303030303030303030303030303030\" should be deleted from the Planetarium",
            "match": {
              "arguments": [
                {
                  "val": "\"303030303030303030303030303030\"",
                  "offset": 11
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.the_planet_should_be_deleted_from_the_Planetarium(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlanets"
          },
          {
            "name": "@SCRUM-TC-21"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:51.118Z",
        "line": 31,
        "name": "As a user I want to be able to remove Planets from the Planetarium, Negative Scenario",
        "description": "\tDelete Planet Negative Scenario",
        "id": "deleteplanets;as-a-user-i-want-to-be-able-to-remove-planets-from-the-planetarium--negative-scenario;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 314959500,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006300,
              "status": "passed"
            },
            "line": 23,
            "name": "No planet with name \"NoPlanetInDatabaseToDeleteHere\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"NoPlanetInDatabaseToDeleteHere\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.no_planet_with_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 84338300,
              "status": "passed"
            },
            "line": 24,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 308345200,
              "status": "passed"
            },
            "line": 25,
            "name": "User enters invalid \"NoPlanetInDatabaseToDeleteHere\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"NoPlanetInDatabaseToDeleteHere\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.user_enters_invalid_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 572040200,
              "status": "passed"
            },
            "line": 26,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The user should see error message pop-up",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_user_should_see_error_message_pop_up()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlanets"
          },
          {
            "name": "@SCRUM-TC-30"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:52.404Z",
        "line": 32,
        "name": "As a user I want to be able to remove Planets from the Planetarium, Negative Scenario",
        "description": "\tDelete Planet Negative Scenario",
        "id": "deleteplanets;as-a-user-i-want-to-be-able-to-remove-planets-from-the-planetarium--negative-scenario;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 327287200,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2002500,
              "status": "passed"
            },
            "line": 23,
            "name": "No planet with name \"3131313131313131313131313131311\" exist",
            "match": {
              "arguments": [
                {
                  "val": "\"3131313131313131313131313131311\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.no_planet_with_name_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 91598200,
              "status": "passed"
            },
            "line": 24,
            "name": "The User selects planets from the drop-down menu",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_selects_planets_from_the_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 297298500,
              "status": "passed"
            },
            "line": 25,
            "name": "User enters invalid \"3131313131313131313131313131311\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"3131313131313131313131313131311\"",
                  "offset": 20
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.user_enters_invalid_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 580787700,
              "status": "passed"
            },
            "line": 26,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The user should see error message pop-up",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_user_should_see_error_message_pop_up()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlanets"
          },
          {
            "name": "@SCRUM-TC-30"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:53.707Z",
        "line": 46,
        "name": "User should not be able to delete a planet by its ID",
        "description": "",
        "id": "deleteplanets;user-should-not-be-able-to-delete-a-planet-by-its-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 335626200,
              "status": "passed"
            },
            "line": 36,
            "name": "The User is already log on",
            "match": {
              "location": "com.revature.step.AddPlanetsSteps.the_User_is_already_log_on()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12999400,
              "status": "passed"
            },
            "line": 37,
            "name": "Planet with ID \"1\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 15
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.planet_with_ID_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 80328100,
              "status": "passed"
            },
            "line": 38,
            "name": "The User selects planets from drop-down menu",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.the_User_selects_planets_from_drop_down_menu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60067000,
              "status": "passed"
            },
            "line": 39,
            "name": "User enters planet ID \"1\" for celestial body to be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 22
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.user_enters_planet_for_celestial_body_to_be_deleted(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1284240900,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on the Delete Button",
            "match": {
              "location": "com.revature.step.DeletePlanetSteps.user_clicks_on_the_Delete_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 41,
            "name": "The user should see error",
            "match": {
              "location": "com.revature.step.DeleteMoonSteps.the_user_should_see_error_and_the_moon_with_ID_should_not_be_deleted()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.DeletePlanetSteps.thePlanetWithIDShouldNotBeDeleted(DeletePlanetSteps.java:123)\r\n\tat ✽.The planet with ID \"1\" should not be deleted(classpath:features/DeletePlanets.feature:42)\r\n",
              "duration": 5192700,
              "status": "failed"
            },
            "line": 42,
            "name": "The planet with ID \"1\" should not be deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 19
                }
              ],
              "location": "com.revature.step.DeletePlanetSteps.thePlanetWithIDShouldNotBeDeleted(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlanets"
          },
          {
            "name": "@SCRUM-TC-33"
          }
        ]
      }
    ],
    "name": "DeletePlanets",
    "description": "",
    "id": "deleteplanets",
    "keyword": "Feature",
    "uri": "classpath:features/DeletePlanets.feature",
    "tags": [
      {
        "name": "@DeletePlanets",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:55.492Z",
        "line": 16,
        "name": "As a User I want to Login to my Account so that I can Enter the Planetarium",
        "description": "\tLogin Functionality Test Positive Scenario",
        "id": "login;as-a-user-i-want-to-login-to-my-account-so-that-i-can-enter-the-planetarium;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45252500,
              "status": "passed"
            },
            "line": 7,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000700,
              "status": "passed"
            },
            "line": 8,
            "name": "Account with username \"Batman\" and password \"I am the night\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"Batman\"",
                  "offset": 22
                },
                {
                  "val": "\"I am the night\"",
                  "offset": 44
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88123900,
              "status": "passed"
            },
            "line": 9,
            "name": "The User enters \"Batman\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Batman\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 132307200,
              "status": "passed"
            },
            "line": 10,
            "name": "The User enters \"I am the night\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"I am the night\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44917900,
              "status": "passed"
            },
            "line": 11,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 29000900,
              "status": "passed"
            },
            "line": 12,
            "name": "The User is redirected to the Planetarium",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_redirected_to_the_Planetarium()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-17"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:55.840Z",
        "line": 31,
        "name": "As the System I don\u0027t want a user to Login to an Account using an invalid Username and Password combo so that I can ensure my user accounts are secure",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-login-to-an-account-using-an-invalid-username-and-password-combo-so-that-i-can-ensure-my-user-accounts-are-secure;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 42066400,
              "status": "passed"
            },
            "line": 21,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2018300,
              "status": "passed"
            },
            "line": 22,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6568200,
              "status": "passed"
            },
            "line": 23,
            "name": "No Registered User with username \"UsernameIsNotInThePlanetarium!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 206468000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User enters \"AlreadyRegisteredUsername!!!!!\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 192870200,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"NotTheCorrectPasswordNotAtAll!\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"NotTheCorrectPasswordNotAtAll!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37352300,
              "status": "passed"
            },
            "line": 26,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17484400,
              "status": "passed"
            },
            "line": 27,
            "name": "The User is kept at the login page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_kept_at_the_login_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-18"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:56.349Z",
        "line": 32,
        "name": "As the System I don\u0027t want a user to Login to an Account using an invalid Username and Password combo so that I can ensure my user accounts are secure",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-login-to-an-account-using-an-invalid-username-and-password-combo-so-that-i-can-ensure-my-user-accounts-are-secure;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 30005500,
              "status": "passed"
            },
            "line": 21,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2016300,
              "status": "passed"
            },
            "line": 22,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2004800,
              "status": "passed"
            },
            "line": 23,
            "name": "No Registered User with username \"UsernameIsNotInThePlanetarium!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 226363200,
              "status": "passed"
            },
            "line": 24,
            "name": "The User enters \"UsernameIsNotInThePlanetarium!\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 187968300,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"PasswordIsThirtyCharactersLong\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34346300,
              "status": "passed"
            },
            "line": 26,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 516244900,
              "status": "passed"
            },
            "line": 27,
            "name": "The User is kept at the login page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_kept_at_the_login_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-18"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:57.351Z",
        "line": 33,
        "name": "As the System I don\u0027t want a user to Login to an Account using an invalid Username and Password combo so that I can ensure my user accounts are secure",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-login-to-an-account-using-an-invalid-username-and-password-combo-so-that-i-can-ensure-my-user-accounts-are-secure;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 26383900,
              "status": "passed"
            },
            "line": 21,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1015400,
              "status": "passed"
            },
            "line": 22,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 986100,
              "status": "passed"
            },
            "line": 23,
            "name": "No Registered User with username \"UsernameIsNotInThePlanetarium!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46866800,
              "status": "passed"
            },
            "line": 24,
            "name": "The User enters \"\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55713900,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39087200,
              "status": "passed"
            },
            "line": 26,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14998300,
              "status": "passed"
            },
            "line": 27,
            "name": "The User is kept at the login page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_kept_at_the_login_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-18"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:57.541Z",
        "line": 34,
        "name": "As the System I don\u0027t want a user to Login to an Account using an invalid Username and Password combo so that I can ensure my user accounts are secure",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-login-to-an-account-using-an-invalid-username-and-password-combo-so-that-i-can-ensure-my-user-accounts-are-secure;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29147000,
              "status": "passed"
            },
            "line": 21,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2011100,
              "status": "passed"
            },
            "line": 22,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000100,
              "status": "passed"
            },
            "line": 23,
            "name": "No Registered User with username \"UsernameIsNotInThePlanetarium!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 191663500,
              "status": "passed"
            },
            "line": 24,
            "name": "The User enters \"AlreadyRegisteredUsername!!!!!\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56441700,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45657100,
              "status": "passed"
            },
            "line": 26,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18031800,
              "status": "passed"
            },
            "line": 27,
            "name": "The User is kept at the login page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_kept_at_the_login_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-18"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:57.892Z",
        "line": 35,
        "name": "As the System I don\u0027t want a user to Login to an Account using an invalid Username and Password combo so that I can ensure my user accounts are secure",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-login-to-an-account-using-an-invalid-username-and-password-combo-so-that-i-can-ensure-my-user-accounts-are-secure;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29115300,
              "status": "passed"
            },
            "line": 21,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1998300,
              "status": "passed"
            },
            "line": 22,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000800,
              "status": "passed"
            },
            "line": 23,
            "name": "No Registered User with username \"UsernameIsNotInThePlanetarium!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58177000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User enters \"\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 218822600,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"PasswordIsThirtyCharactersLong\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37326400,
              "status": "passed"
            },
            "line": 26,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 520562700,
              "status": "passed"
            },
            "line": 27,
            "name": "The User is kept at the login page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_kept_at_the_login_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-18"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:58.762Z",
        "line": 51,
        "name": "As a User I want to Logout of my Account so that I can exit the Planetarium",
        "description": "\tLogin Functionality Test Positive Scenario",
        "id": "login;as-a-user-i-want-to-logout-of-my-account-so-that-i-can-exit-the-planetarium;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 30090300,
              "status": "passed"
            },
            "line": 40,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6999800,
              "status": "passed"
            },
            "line": 41,
            "name": "Account with username \"UsernameIsNotInThePlanetarium!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184568700,
              "status": "passed"
            },
            "line": 42,
            "name": "The User enters \"UsernameIsNotInThePlanetarium!\" into username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsNotInThePlanetarium!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_username_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 167835100,
              "status": "passed"
            },
            "line": 43,
            "name": "The User enters \"PasswordIsThirtyCharactersLong\" into password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.LoginSteps.the_User_enters_into_password_input_bar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37547000,
              "status": "passed"
            },
            "line": 44,
            "name": "The User clicks on the Login Button",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_clicks_on_the_Login_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 529830900,
              "status": "passed"
            },
            "line": 45,
            "name": "The User is redirected to the Planetarium",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_redirected_to_the_Planetarium()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 36955500,
              "status": "passed"
            },
            "line": 46,
            "name": "The User clicks on the Logout Button",
            "match": {
              "location": "com.revature.step.LoginSteps.theUserClicksOnTheLogoutButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27449000,
              "status": "passed"
            },
            "line": 47,
            "name": "The User is redirected back to the Login page",
            "match": {
              "location": "com.revature.step.LoginSteps.theUserIsRedirectedBackToTheLoginPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-26"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:24:59.786Z",
        "line": 54,
        "name": "As the System I don\u0027t want a user to bypass the Login page so that I can ensure the Planetarium is only for logged in users",
        "description": "\tLogin Functionality Test Negative Scenario",
        "id": "login;as-the-system-i-don-t-want-a-user-to-bypass-the-login-page-so-that-i-can-ensure-the-planetarium-is-only-for-logged-in-users",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24164000,
              "status": "passed"
            },
            "line": 56,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51368000,
              "status": "passed"
            },
            "line": 57,
            "name": "The User enters the Planetarium Main Page URL into the browser URL",
            "match": {
              "location": "com.revature.step.LoginSteps.theUserEntersThePlanetariumMainPageURLIntoTheBrowserURL()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2735800,
              "status": "passed"
            },
            "line": 58,
            "name": "The User is not redirected to the Planetarium",
            "match": {
              "location": "com.revature.step.LoginSteps.theUserIsNotRedirectedToThePlanetarium()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@SCRUM-TC-27"
          }
        ]
      }
    ],
    "name": "Login",
    "description": "",
    "id": "login",
    "keyword": "Feature",
    "uri": "classpath:features/Login.feature",
    "tags": [
      {
        "name": "@Login",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:24:59.867Z",
        "line": 17,
        "name": "As a User I want to Register an Account with the Planetarium so that I can Login Securely",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-a-user-i-want-to-register-an-account-with-the-planetarium-so-that-i-can-login-securely;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45929900,
              "status": "passed"
            },
            "line": 7,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7665800,
              "status": "passed"
            },
            "line": 8,
            "name": "No Registered User with username \"Paul muad\u0027dib atreides!!!!!!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Paul muad\u0027dib atreides!!!!!!!!\"",
                  "offset": 33
                }
              ],
              "location": "com.revature.step.RegistrationSteps.no_Registered_User_with_username(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 117217000,
              "status": "passed"
            },
            "line": 9,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 166286700,
              "status": "passed"
            },
            "line": 10,
            "name": "The User enters \"Paul muad\u0027dib atreides!!!!!!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Paul muad\u0027dib atreides!!!!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 192756200,
              "status": "passed"
            },
            "line": 11,
            "name": "The User enters \"Air power sea power desert30!!\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Air power sea power desert30!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40458900,
              "status": "passed"
            },
            "line": 12,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 548687800,
              "status": "passed"
            },
            "line": 13,
            "name": "The User is registered and redirected into the Planetarium Login page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_is_registered_and_redirected_into_the_Planetarium()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-19"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:00.993Z",
        "line": 32,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29083500,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2576300,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110883900,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 191698400,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"AlreadyRegisteredUsername!!!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 205779300,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"NotTheCorrectPasswordNotAtAll!\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"NotTheCorrectPasswordNotAtAll!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31468800,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 518320400,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:02.086Z",
        "line": 33,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 48364100,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 949600,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 156975200,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 275096100,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"House Harkonnen owns Arrakis!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"House Harkonnen owns Arrakis!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 185662000,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"Air power sea power desert30!!\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Air power sea power desert30!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38053400,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14206900,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:02.811Z",
        "line": 34,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45052600,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1283000,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109190900,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 175773400,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"House Harkonnen owns Arrakis!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"House Harkonnen owns Arrakis!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 196223900,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"The Lisan will liberate Arrakis\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"The Lisan will liberate Arrakis\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 41461300,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17146400,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:03.401Z",
        "line": 35,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 38682100,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1412200,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 124621000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38694300,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38811800,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 41917500,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12796800,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:03.701Z",
        "line": 36,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 59473900,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000200,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 118135500,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44359600,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177849900,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"Air power sea power desert30!!\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Air power sea power desert30!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44679000,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13012900,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:04.165Z",
        "line": 37,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 38569400,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1015700,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92407100,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 42237800,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 169866900,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"The Lisan will liberate Arrakis\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"The Lisan will liberate Arrakis\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35308600,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13144400,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:04.563Z",
        "line": 38,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45970000,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 994400,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 113174000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 161104100,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"Paul muad\u0027dib atreides!!!!!!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Paul muad\u0027dib atreides!!!!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52633700,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38715500,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15986600,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:04.995Z",
        "line": 39,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45828700,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1994800,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 138087200,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177908900,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"House Harkonnen owns Arrakis!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"House Harkonnen owns Arrakis!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 68333900,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35235000,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17335500,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      },
      {
        "start_timestamp": "2024-08-12T19:25:05.484Z",
        "line": 40,
        "name": "As the System I don\u0027t want a user to Register an Account using invalid usernames and passwords so that I can ensure system requirements are met",
        "description": "\tRegistration Feature Testing Positive Scenario",
        "id": "registration;as-the-system-i-don-t-want-a-user-to-register-an-account-using-invalid-usernames-and-passwords-so-that-i-can-ensure-system-requirements-are-met;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 44159400,
              "status": "passed"
            },
            "line": 22,
            "name": "The User is on the Login Page",
            "match": {
              "location": "com.revature.step.LoginSteps.the_User_is_on_the_Login_Page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 996500,
              "status": "passed"
            },
            "line": 23,
            "name": "Account with username \"AlreadyRegisteredUsername!!!!!\" and password \"PasswordIsThirtyCharactersLong\" already registered",
            "match": {
              "arguments": [
                {
                  "val": "\"AlreadyRegisteredUsername!!!!!\"",
                  "offset": 22
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 68
                }
              ],
              "location": "com.revature.step.RegistrationSteps.account_with_username_and_password_already_registered(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 93473000,
              "status": "passed"
            },
            "line": 24,
            "name": "The User clicks on Create an Account Link",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_Create_an_Account_Link()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 173423500,
              "status": "passed"
            },
            "line": 25,
            "name": "The User enters \"Paul muad\u0027dib atreides!!!!!!!!\" into registration username input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"Paul muad\u0027dib atreides!!!!!!!!\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationUsernameInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 186415000,
              "status": "passed"
            },
            "line": 26,
            "name": "The User enters \"The Lisan will liberate Arrakis\" into registration password input bar",
            "match": {
              "arguments": [
                {
                  "val": "\"The Lisan will liberate Arrakis\"",
                  "offset": 16
                }
              ],
              "location": "com.revature.step.RegistrationSteps.theUserEntersIntoRegistrationPasswordInputBar(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43154800,
              "status": "passed"
            },
            "line": 27,
            "name": "The User clicks on the Create Button",
            "match": {
              "location": "com.revature.step.RegistrationSteps.the_User_clicks_on_the_Create_Button()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12211500,
              "status": "passed"
            },
            "line": 28,
            "name": "The User is kept at the Registration page",
            "match": {
              "location": "com.revature.step.RegistrationSteps.theUserIsKeptAtTheRegistrationPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Registration"
          },
          {
            "name": "@SCRUM-TC-20"
          }
        ]
      }
    ],
    "name": "Registration",
    "description": "",
    "id": "registration",
    "keyword": "Feature",
    "uri": "classpath:features/Registration.feature",
    "tags": [
      {
        "name": "@Registration",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-08-12T19:25:06.039Z",
        "line": 10,
        "name": "User wants to see all the available celestial bodies in planetarium",
        "description": "",
        "id": "view-celestial-bodies;user-wants-to-see-all-the-available-celestial-bodies-in-planetarium;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 481057800,
              "status": "passed"
            },
            "line": 4,
            "name": "The User is already logged in with \"UsernameIsThirtyCharactersLong\" and  \"PasswordIsThirtyCharactersLong\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UsernameIsThirtyCharactersLong\"",
                  "offset": 35
                },
                {
                  "val": "\"PasswordIsThirtyCharactersLong\"",
                  "offset": 73
                }
              ],
              "location": "com.revature.step.ViewCeletialBodiesSteps.the_User_is_already_logged_in_with_and(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9046400,
              "status": "passed"
            },
            "line": 5,
            "name": "User is redirected to the Planetarium",
            "match": {
              "location": "com.revature.step.ViewCeletialBodiesSteps.the_User_is_redirected_to_the_Planetarium()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat com.revature.step.ViewCeletialBodiesSteps.user_sees_all_the_bodies(ViewCeletialBodiesSteps.java:57)\r\n\tat ✽.User see all the available celestial Bodies.(classpath:features/ViewCeletialBodies.feature:6)\r\n",
              "duration": 1565472100,
              "status": "failed"
            },
            "line": 6,
            "name": "User see all the available celestial Bodies.",
            "match": {
              "location": "com.revature.step.ViewCeletialBodiesSteps.user_sees_all_the_bodies()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@ViewCelestialBodies"
          }
        ]
      }
    ],
    "name": "View Celestial Bodies",
    "description": "",
    "id": "view-celestial-bodies",
    "keyword": "Feature",
    "uri": "classpath:features/ViewCeletialBodies.feature",
    "tags": [
      {
        "name": "@ViewCelestialBodies",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]